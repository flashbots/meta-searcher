#!/bin/sh
### BEGIN INIT INFO
# Provides:          ssh-pubkey-server
# Required-Start:    $network $remote_fs $syslog $searcher-container
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start SSH Public Key Server daemon at boot time
# Description:       Enable SSH Public Key Server service provided by daemon.
### END INIT INFO

DAEMON=/usr/bin/httpserver
NAME=ssh-pubkey-server
DESC="SSH Public Key Server"
KEY_FILE="/etc/searcher/ssh_hostkey/host_key.pub"
DAEMON_ARGS="--listen-addr=127.0.0.1:8645 --ssh-pubkey-file ${KEY_FILE}"
PIDFILE=/var/run/$NAME.pid
LOGFILE=/tmp/httpserver.log

DAEMON_PROXY=/usr/bin/cvm-reverse-proxy
LOGFILE_PROXY=/tmp/proxy.log
PIDFILE_PROXY=/var/run/proxy.pid

wait_for_ssh_key() {
    echo "Waiting for SSH host key generation..."
    max_attempts=10
    attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        echo "Attempt $attempt/$max_attempts: Checking for SSH host key..."
        
        # Check if file exists
        if [ -f "$KEY_FILE" ]; then
            # Verify it's a valid SSH public key by checking for "ssh-ed25519" prefix
            if grep -q "^ssh-ed25519 " "$KEY_FILE"; then
                echo "Valid SSH host key found"
                return 0
            else
                echo "File exists but doesn't appear to be a valid SSH key"
            fi
        else
            echo "Host key file not found yet"
        fi
        
        sleep 10
        attempt=$((attempt + 1))
    done
    
    echo "SSH host key was not generated within timeout"
    return 1
}

start_proxy() {
    echo -n "Starting attested TLS Proxy: "
    start-stop-daemon -S -p $PIDFILE_PROXY -N -10 -b -a /bin/sh -- -c "exec 
        ${DAEMON_PROXY} -server -target-port=8645 -listen-port=8745 \
        2>&1 | tee ${LOGFILE_PROXY}"
    echo "proxy."
}

start() {
  # Wait for SSH key to be generated by the container
  if ! wait_for_ssh_key; then
      echo "Failed to find valid SSH host key, cannot start server"
      return 1
  fi
  
  # Start the attested TLS reverse proxy server
  start_proxy
  
  echo "Starting $DESC: "
  start-stop-daemon -S -p $PIDFILE -N -10 -b -a /bin/sh -- -c "exec $DAEMON $DAEMON_ARGS 2>&1 | tee -a $LOGFILE"
  echo "$NAME."
}

stop() {
  echo "Stopping $DESC: "
  start-stop-daemon --stop --quiet --pidfile $PIDFILE
  echo "$NAME."
}

restart() {
  echo "Restarting $DESC: "
  stop
  sleep 1
  start
}
test -x $DAEMON || exit 0

set -e

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|force-reload)
    restart
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|force-reload}" >&2
    exit 1
    ;;
esac

exit 0
